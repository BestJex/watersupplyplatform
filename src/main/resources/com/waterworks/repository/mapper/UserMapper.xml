<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.waterworks.repository.mapper.UserMapper" >
  <resultMap id="UserResultMap" type="com.waterworks.repository.entity.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="last_login" property="lastLogin" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
  </resultMap>

  <sql id="UserResultMap" >
    id, username, password, email, phone, status, avatar, register_time, last_login, 
    updated_time, role_id
  </sql>

  <insert id="insertUser" parameterType="com.waterworks.repository.entity.User"
          useGeneratedKeys="true" keyProperty="id">
    insert into user(username,password,email,phone,register_time,role_id)
    values(#{username},#{password},#{email},#{phone},#{registerTime},#{roleId})
  </insert>

  <select id="findUserById" resultMap="UserResultMap">
    select
    id,username,password,email,phone,status,avatar,register_time,last_login,updated_time,role_id
    from user where id=#{id}
  </select>

  <select id="selectAllUsers" resultMap="UserResultMap">
    select
    <include refid="UserResultMap" />
    from user
  </select>

  <delete id="deleteUserById" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id}
  </delete>

  <update id="updateUserById" parameterType="com.waterworks.repository.entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id}
  </update>

</mapper>